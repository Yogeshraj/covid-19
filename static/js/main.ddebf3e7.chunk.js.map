{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Footer/Footer.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","reportDate","incidentRate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchDaily","myfetch","line","labels","datasets","label","borderColor","fill","backgroundColor","options","fontColor","barChart","legend","display","title","text","CountryPicker","handleChange","setcountries","fetchedCountry","fetchCountry","FormControl","formcontainer","NativeSelect","onChange","e","target","i","key","Footer","footer","href","App","state","countryData","setState","fetchedData","this","src","CovidImg","alt","width","logoimg","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddebf3e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2UqQq\",\"card\":\"Cards_card__39iVH\",\"infected\":\"Cards_infected__G4CB7\",\"recovered\":\"Cards_recovered__1y_qj\",\"deaths\":\"Cards_deaths__LwvLW\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, stylesProvider} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate} }) =>{\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected Cases</Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\"><CountUp start={0} end={confirmed.value} duration={1.5} separator=\",\" /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered Cases</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={1.5} separator=\",\" /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">Number of active cases of COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Death Cases</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={1.5} separator=\",\" /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">Number of active cases of COVID-19.</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData = async (country) =>{\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() =>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        return data.map(({ confirmed, deaths, reportDate, incidentRate })=>(\r\n            { confirmed: confirmed.total, deaths: deaths.total, reportDate, incidentRate }\r\n        ));        \r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() =>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((data)=>data.name);\r\n        \r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\nfetchCountries();","import React, {useEffect, useState} from 'react';\r\nimport {fetchDailyData}  from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{ confirmed, recovered, deaths }, country }) =>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(()  => {\r\n        const myfetch = async () =>{\r\n            const fetchDaily = await fetchDailyData();\r\n            setDailyData(fetchDaily);\r\n        }\r\n        myfetch();\r\n    },[]);\r\n\r\nconst line = (\r\n    dailyData[0] ? (\r\n    <Line\r\n    data={{\r\n        labels:dailyData.map((data)=> data.reportDate),\r\n        datasets:[{\r\n            data:dailyData.map((data)=>data.confirmed),\r\n            label:'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n        },{\r\n            data:dailyData.map((data)=>data.deaths),\r\n            label:'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n        }\r\n    ]\r\n    }}\r\n    options={{\r\n        labels: { fontColor: '#ccc' },\r\n      }}\r\n    />\r\n\r\n    ) : null\r\n);\r\n\r\n\r\nconst barChart = (\r\n    confirmed ? (\r\n    <Bar \r\n        data ={{\r\n            labels: ['Confirmed', 'Recovered', 'Deaths'],\r\n            datasets:[\r\n                {\r\n                    label:'People',\r\n                    backgroundColor:['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data:[confirmed.value, recovered.value, deaths.value ]\r\n                }\r\n            ]\r\n        }}\r\n        options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Current state in ${country}` },\r\n          }}\r\n    />) : null\r\n)\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : line}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{useEffect, useState} from 'react';\r\nimport {NativeSelect, FormControl  } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({ handleChange  }) =>{\r\n    const [countries, setcountries] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchCountry = async () =>{\r\n            const fetchedCountry = await fetchCountries();\r\n            setcountries(fetchedCountry);\r\n        }\r\n        fetchCountry();\r\n    },[]);\r\n\r\n    return(\r\n        <FormControl className={styles.formcontainer}>\r\n            <NativeSelect onChange={(e)=> handleChange(e.target.value) }>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i)=> <option key={i} value={country}>{country}</option>) }\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport styles from './Footer.module.css'\r\n\r\nconst Footer = () =>{\r\n    return(\r\n        <footer className={styles.footer}>\r\n            Datas based on Api <a href=\"https://covid19.mathdro.id/api\">https://covid19.mathdro.id/api</a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker, Footer} from './components'\r\nimport styles from \"./App.module.css\";\r\nimport {fetchData} from './api';\r\nimport CovidImg from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data:{},\r\n        country:'',\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    handleChange = async (data) =>{\r\n        const countryData = await fetchData(data);\r\n        this.setState({ data:countryData, country: data })\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img src={CovidImg} alt=\"Covid Images\" width=\"370px\" className={styles.logoimg} />\r\n                <Cards data={data} />\r\n                <CountryPicker handleChange={this.handleChange} />\r\n                <Chart data={data} country={country} />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// const App = () =>{\r\n//     return(\r\n//     <div className={styles.container}>\r\n//         <Cards />\r\n//         <Chart />\r\n//         <CountryPicker />\r\n//     </div>\r\n//     )\r\n// }\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3AOXJ\",\"logoimg\":\"App_logoimg__2IsIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1WZmx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontainer\":\"CountryPicker_formcontainer__2NJ5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1Pu3J\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}